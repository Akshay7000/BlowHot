{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Form, Input, Label, Item } from 'native-base';\nimport FontAwesomeIcon from \"@expo/vector-icons/FontAwesome\";\nimport axios from 'axios';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { DataTable } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport RNRestart from 'react-native-restart';\nimport Toast from 'react-native-simple-toast';\nimport * as Updates from 'expo-updates';\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from \"../responsiveLayout/ResponsiveLayout\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction Login(props) {\n  var _responseData$div_com;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hidePassword = _useState6[0],\n      setHidePassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showDivision = _useState8[0],\n      setShowDivision = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showCompany = _useState10[0],\n      setShowCompany = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      responseData = _useState12[0],\n      setResponseData = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showLogin = _useState14[0],\n      setShowLogin = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loading = _useState16[0],\n      setLoading = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      user = _useState18[0],\n      setUser = _useState18[1];\n\n  var divisionhandler = function divisionhandler(companycode, sdate, eDate) {\n    var company = function company() {\n      return _regeneratorRuntime.async(function company$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              AsyncStorage.setItem(\"companyCode\", companycode);\n              AsyncStorage.setItem(\"startingDate\", sdate);\n              AsyncStorage.setItem(\"endDate\", eDate);\n              setShowDivision(true);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    company();\n  };\n\n  var homeHandler = function homeHandler(divisionCode, divName) {\n    var division = function division() {\n      return _regeneratorRuntime.async(function division$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              AsyncStorage.setItem(\"divisionCode\", divisionCode);\n              AsyncStorage.setItem(\"divisionName\", divName);\n              Updates.reloadAsync();\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    division();\n  };\n\n  var loginsubmit = function loginsubmit() {\n    setLoading(true);\n    axios({\n      method: 'POST',\n      url: \"http://103.231.46.238:5000/userright/appuserlogin\",\n      data: {\n        'usrnm': userName,\n        'usrpwd': password\n      }\n    }).then(function (respone) {\n      if (!respone.data.success) {\n        setLoading(false);\n        Toast.showWithGravity(respone.data.message, Toast.LONG, Toast.TOP);\n      } else {\n        var setItem = function setItem() {\n          return _regeneratorRuntime.async(function setItem$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"masterid\", respone.data.masterid));\n\n                case 2:\n                  _context3.next = 4;\n                  return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"user\", respone.data.user_name));\n\n                case 4:\n                  _context3.next = 6;\n                  return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"responseData\", JSON.stringify(respone.data)));\n\n                case 6:\n                  _context3.next = 8;\n                  return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"administrator\", respone.data.userright.administrator));\n\n                case 8:\n                  _context3.next = 10;\n                  return _regeneratorRuntime.awrap(AsyncStorage.setItem('salesTeam', respone.data.userright.service_team));\n\n                case 10:\n                  setUser(respone.data.user_name);\n                  setResponseData(respone.data);\n                  setShowLogin(false);\n                  setShowCompany(true);\n                  setLoading(false);\n\n                case 15:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        };\n\n        setItem();\n      }\n    }).catch(function (error) {\n      console.log(\"error\");\n      setLoading(false);\n      Toast.showWithGravity('Invalid Username or Password.', Toast.LONG, Toast.TOP);\n    });\n  };\n\n  useEffect(function () {\n    var unsubscribe = props.navigation.addListener('focus', function _callee() {\n      var u;\n      return _regeneratorRuntime.async(function _callee$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 2:\n              u = _context4.sent;\n              _context4.t0 = setUser;\n              _context4.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 6:\n              _context4.t1 = _context4.sent;\n              (0, _context4.t0)(_context4.t1);\n              _context4.t2 = console;\n              _context4.next = 11;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"responseData\"));\n\n            case 11:\n              _context4.t3 = _context4.sent;\n\n              _context4.t2.log.call(_context4.t2, _context4.t3, \"response\");\n\n              if (!u) {\n                _context4.next = 26;\n                break;\n              }\n\n              _context4.t4 = setResponseData;\n              _context4.t5 = JSON;\n              _context4.next = 18;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"responseData\"));\n\n            case 18:\n              _context4.t6 = _context4.sent;\n              _context4.t7 = _context4.t5.parse.call(_context4.t5, _context4.t6);\n              (0, _context4.t4)(_context4.t7);\n              setShowLogin(false);\n              setShowCompany(true);\n              props.navigation.setOptions({\n                title: \"Shift Company/Division\",\n                headerStyle: {\n                  backgroundColor: \"#D9EDF7\"\n                }\n              });\n              _context4.next = 29;\n              break;\n\n            case 26:\n              props.navigation.setOptions({\n                title: \"Login \"\n              });\n              setShowLogin(true);\n              setShowCompany(false);\n\n            case 29:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n    setUserName(\"\");\n    setPassword(\"\");\n    return unsubscribe;\n  }, [props.navigation]);\n  return _jsx(_Fragment, {\n    children: !loading ? _jsxs(_Fragment, {\n      children: [!user && _jsx(View, {\n        style: styles.container,\n        children: _jsxs(Form, {\n          style: styles.form,\n          children: [_jsx(Image, {\n            source: {\n              uri: \"http://103.231.46.238:5000/public/img/logo.png \"\n            },\n            style: styles.image,\n            resizeMode: \"contain\"\n          }), _jsxs(Item, {\n            floatingLabel: true,\n            children: [_jsx(Label, {\n              style: {\n                color: \"white\",\n                fontWeight: \"bold\"\n              },\n              children: \"Username\"\n            }), _jsx(Input, {\n              value: userName,\n              onChangeText: function onChangeText(username) {\n                return setUserName(username);\n              },\n              style: {\n                color: \"white\",\n                fontWeight: \"bold\"\n              },\n              autoCompleteType: \"username\"\n            })]\n          }), _jsxs(Item, {\n            floatingLabel: true,\n            children: [_jsx(Label, {\n              style: {\n                color: \"white\",\n                fontWeight: \"bold\"\n              },\n              children: \"Password\"\n            }), _jsx(Input, {\n              style: {\n                color: \"white\",\n                fontWeight: \"bold\"\n              },\n              secureTextEntry: hidePassword,\n              value: password,\n              onChangeText: function onChangeText(password) {\n                return setPassword(password);\n              }\n            })]\n          }), _jsx(Item, {\n            style: {\n              position: \"relative\",\n              top: -30,\n              left: 130,\n              border: \"none\"\n            },\n            children: _jsx(TouchableOpacity, {\n              activeOpacity: 0.8,\n              onPress: function onPress() {\n                return setHidePassword(!hidePassword);\n              },\n              children: hidePassword ? _jsx(FontAwesomeIcon, {\n                name: \"eye-slash\",\n                size: 23,\n                color: \"black\"\n              }) : _jsx(FontAwesomeIcon, {\n                name: \"eye\",\n                size: 23,\n                color: \"black\"\n              })\n            })\n          }), _jsx(View, {\n            style: styles.button,\n            children: _jsx(Button, {\n              onPress: function onPress() {\n                return loginsubmit();\n              },\n              title: \"Login\",\n              style: {\n                width: wp(\"50%\"),\n                borderRadius: 40\n              }\n            })\n          }), _jsx(Text, {\n            style: {\n              top: 10\n            },\n            children: \"Forgot Password ?\"\n          })]\n        })\n      }), user && showCompany ? _jsxs(ScrollView, {\n        children: [_jsxs(DataTable, {\n          children: [_jsxs(DataTable.Header, {\n            children: [_jsx(DataTable.Title, {\n              children: \"Company\"\n            }), _jsx(DataTable.Title, {\n              children: \"Start Dtae\"\n            }), _jsx(DataTable.Title, {\n              children: \"End Date\"\n            }), _jsx(DataTable.Title, {\n              children: \"Enter\"\n            })]\n          }), (_responseData$div_com = responseData.div_com) == null ? void 0 : _responseData$div_com.map(function (dat) {\n            return _jsxs(DataTable.Row, {\n              children: [_jsx(DataTable.Cell, {\n                children: dat.com_name\n              }), _jsx(DataTable.Cell, {\n                children: dat.sdate.substring(0, 10).split('-').reverse().join('/')\n              }), _jsx(DataTable.Cell, {\n                children: dat.edate.substring(0, 10).split('-').reverse().join('/')\n              }), _jsx(DataTable.Cell, {\n                children: _jsx(Button, {\n                  onPress: function onPress() {\n                    return divisionhandler(dat._id, dat.sdate, dat.edate);\n                  },\n                  title: \"Click  \"\n                })\n              })]\n            });\n          })]\n        }), showDivision && _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: {\n              borderBottomColor: 'grey',\n              borderBottomWidth: 1,\n              marginBottom: 0,\n              padding: 20,\n              margin: 10\n            }\n          }), _jsx(Text, {\n            style: {\n              fontSize: 23,\n              fontWeight: '800',\n              paddingLeft: 85,\n              backgroundColor: \"#D9EDF7\",\n              width: \"100%\",\n              height: 50,\n              borderRadius: 10,\n              textAlign: \"left\",\n              paddingTop: 10\n            },\n            children: \"Division\"\n          }), _jsxs(DataTable, {\n            children: [_jsxs(DataTable.Header, {\n              children: [_jsx(DataTable.Title, {\n                children: \"Divison\"\n              }), _jsx(DataTable.Title, {\n                children: \"Code\"\n              }), _jsx(DataTable.Title, {\n                children: \"Link\"\n              })]\n            }), responseData.div_mast.map(function (dat) {\n              return _jsxs(DataTable.Row, {\n                children: [_jsx(DataTable.Cell, {\n                  children: dat.div_mast\n                }), _jsx(DataTable.Cell, {\n                  children: dat.div_code\n                }), _jsx(DataTable.Cell, {\n                  children: _jsx(Button, {\n                    title: \"Enter  \",\n                    onPress: function onPress() {\n                      return homeHandler(dat._id, dat.div_code);\n                    }\n                  })\n                })]\n              });\n            })]\n          })]\n        })]\n      }) : _jsx(_Fragment, {})]\n    }) : _jsx(ActivityIndicator, {\n      color: \"skyblue\",\n      size: 100\n    })\n  });\n}\n\nexport default Login;\nvar styles = StyleSheet.create({\n  image: {\n    width: '40%',\n    height: \"30%\"\n  },\n  form: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 25,\n    backgroundColor: \"#F39C12\",\n    borderRadius: 20\n  },\n  container: {\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  button: {\n    backgroundColor: \"lightgray\",\n    borderRadius: 10,\n    width: wp(\"50%\")\n  }\n});","map":{"version":3,"sources":["D:/Web/mobileapp/Blowhot/screens/screen/Login.js"],"names":["React","useState","useEffect","AsyncStorage","Form","Input","Label","Item","FontAwesomeIcon","axios","TouchableOpacity","DataTable","ScrollView","RNRestart","Toast","Updates","heightPercentageToDP","hp","widthPercentageToDP","wp","Login","props","userName","setUserName","password","setPassword","hidePassword","setHidePassword","showDivision","setShowDivision","showCompany","setShowCompany","responseData","setResponseData","showLogin","setShowLogin","loading","setLoading","user","setUser","divisionhandler","companycode","sdate","eDate","company","setItem","homeHandler","divisionCode","divName","division","reloadAsync","loginsubmit","method","url","data","then","respone","success","showWithGravity","message","LONG","TOP","masterid","user_name","JSON","stringify","userright","administrator","service_team","catch","error","console","log","unsubscribe","navigation","addListener","getItem","u","parse","setOptions","title","headerStyle","backgroundColor","styles","container","form","uri","image","color","fontWeight","username","position","top","left","border","button","width","borderRadius","div_com","map","dat","com_name","substring","split","reverse","join","edate","_id","borderBottomColor","borderBottomWidth","marginBottom","padding","margin","fontSize","paddingLeft","height","textAlign","paddingTop","div_mast","div_code","StyleSheet","create","justifyContent","alignItems","flex","flexDirection"],"mappings":"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","sourcesContent":["// http://103.231.46.238:5000/userright/login\n// \"image\": \"http://13.233.147.124:3000/public/img/logo.png\",\n\nimport React, { useState, useEffect } from 'react'\nimport { ImageBackground, View, StyleSheet, Button, TextInput, Text, Animated, ActivityIndicator, KeyboardAvoidingView, Image } from 'react-native'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { Form, Input, Label, Item } from 'native-base';\nimport FontAwesomeIcon from 'react-native-vector-icons/FontAwesome';\nimport axios from 'axios';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { DataTable } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport RNRestart from 'react-native-restart'\nimport Toast from 'react-native-simple-toast';\nimport * as Updates from 'expo-updates'\nimport {\n    heightPercentageToDP as hp,\n    widthPercentageToDP as wp,\n} from '../responsiveLayout/ResponsiveLayout'\nfunction Login(props) {\n\n    const [userName, setUserName] = useState()\n    const [password, setPassword] = useState()\n    const [hidePassword, setHidePassword] = useState(true)\n    const [showDivision, setShowDivision] = useState(false)\n    const [showCompany, setShowCompany] = useState(false)\n    const [responseData, setResponseData] = useState([])\n    const [showLogin, setShowLogin] = useState(true)\n    const [loading, setLoading] = useState(false)\n    const [user, setUser] = useState()\n\n    const divisionhandler = (companycode, sdate, eDate) => {\n        const company = async () => {\n            AsyncStorage.setItem(\"companyCode\", companycode)\n            AsyncStorage.setItem(\"startingDate\", sdate)\n            AsyncStorage.setItem(\"endDate\", eDate)\n            setShowDivision(true)\n        }\n        company();\n    }\n\n\n    const homeHandler = (divisionCode, divName) => {\n        const division = async () => {\n            AsyncStorage.setItem(\"divisionCode\", divisionCode)\n            AsyncStorage.setItem(\"divisionName\", divName)\n        //    props.navigation.navigate('Home')\n            Updates.reloadAsync()\n        }\n        division();\n    }\n\n\n    const loginsubmit = () => {\n        setLoading(true)\n        axios({\n            method: 'POST',\n            url: \"http://103.231.46.238:5000/userright/appuserlogin\",\n            data: {\n                'usrnm': userName,\n                'usrpwd': password\n            }\n        })\n            .then(respone => {\n                if(!respone.data.success)\n                {\n                    setLoading(false)\n                    Toast.showWithGravity(respone.data.message, Toast.LONG, Toast.TOP);\n                }\n                else{\n                const setItem = async () => {\n                    await AsyncStorage.setItem(\"masterid\", respone.data.masterid)\n                    await AsyncStorage.setItem(\"user\", respone.data.user_name)\n                    await AsyncStorage.setItem(\"responseData\", JSON.stringify(respone.data))\n                    await AsyncStorage.setItem(\"administrator\", respone.data.userright.administrator)\n                    await AsyncStorage.setItem('salesTeam',respone.data.userright.service_team)\n                    setUser(respone.data.user_name)\n                    setResponseData(respone.data)\n                    setShowLogin(false)\n                    setShowCompany(true)\n                    setLoading(false)\n                }\n                setItem();\n            }\n            })\n            .catch(error => {\n                console.log(\"error\")\n                setLoading(false)\n                Toast.showWithGravity('Invalid Username or Password.', Toast.LONG, Toast.TOP);\n            })\n\n    }\n\n    useEffect(() => {\n        const unsubscribe = props.navigation.addListener('focus', async () => {\n            let u = await AsyncStorage.getItem(\"user\")\n            setUser(await AsyncStorage.getItem(\"user\"))\n            console.log(await AsyncStorage.getItem(\"responseData\"), \"response\")\n            if (u) {\n                setResponseData(JSON.parse(await AsyncStorage.getItem(\"responseData\")))\n                setShowLogin(false)\n                setShowCompany(true)\n                props.navigation.setOptions({\n                    title: \"Shift Company/Division\", headerStyle: {\n                        backgroundColor: \"#D9EDF7\"\n                    }\n                })\n\n            }\n            else {\n                props.navigation.setOptions({\n                    title: \"Login \"\n                })\n                setShowLogin(true)\n                setShowCompany(false)\n            }\n        });\n\n        setUserName(\"\")\n        setPassword(\"\")\n        return unsubscribe;\n    }, [props.navigation])\n\n\n\n    return (\n        <>\n            {\n                !loading ?\n                    <>\n                        {\n                            !user &&\n                            <View style={styles.container}>\n                                <Form style={styles.form}>\n                                <Image source={{ uri: `http://103.231.46.238:5000/public/img/logo.png `}} style={styles.image} resizeMode=\"contain\" />\n                        \n                                    <Item floatingLabel>\n                                        <Label style={{color:\"white\",fontWeight:\"bold\"}}>Username</Label>\n                                        <Input value={userName} onChangeText={(username) => setUserName(username)} style={{color:\"white\",fontWeight:\"bold\"}} autoCompleteType=\"username\" ></Input>\n\n                                    </Item>\n\n\n                                    <Item floatingLabel>\n                                        <Label style={{color:\"white\",fontWeight:\"bold\"}}>Password</Label>\n                                        <Input style={{color:\"white\",fontWeight:\"bold\"}} secureTextEntry={hidePassword} value={password} onChangeText={(password) => setPassword(password)}  />\n\n                                    </Item>\n                                    <Item style={{ position: \"relative\", top: -30, left: 130, border: \"none\", }}>\n                                        <TouchableOpacity activeOpacity={0.8} onPress={() => setHidePassword(!hidePassword)}>\n                                            {\n                                                hidePassword ? <FontAwesomeIcon name=\"eye-slash\" size={23} color=\"black\" />\n                                                    :\n                                                    <FontAwesomeIcon name=\"eye\" size={23} color=\"black\" />\n                                            }\n                                        </TouchableOpacity>\n\n                                    </Item>\n                                    <View style={styles.button}>\n                                    <Button  onPress={() => loginsubmit()} title=\"Login\"  style={{width:wp(\"50%\"),borderRadius:40}} ></Button>\n                                    </View>\n                                    <Text style={{ top: 10 }}>Forgot Password ?</Text>\n\n                                </Form>\n\n\n                            </View>\n                        }\n\n                        {\n\n                            (user && showCompany) ?\n\n                                (<ScrollView>\n\n                                    <DataTable>\n                                        <DataTable.Header>\n                                            <DataTable.Title>Company</DataTable.Title>\n                                            <DataTable.Title >Start Dtae</DataTable.Title>\n                                            <DataTable.Title >End Date</DataTable.Title>\n                                            <DataTable.Title >Enter</DataTable.Title>\n                                        </DataTable.Header>\n\n\n                                        {\n                                            responseData.div_com?.map(dat => (\n                                                <DataTable.Row>\n                                                    <DataTable.Cell>{dat.com_name}</DataTable.Cell>\n                                                    <DataTable.Cell >{((dat.sdate).substring(0, 10)).split('-').reverse().join('/')}</DataTable.Cell>\n                                                    <DataTable.Cell >{((dat.edate).substring(0, 10)).split('-').reverse().join('/')}</DataTable.Cell>\n                                                    <DataTable.Cell ><Button onPress={() => divisionhandler(dat._id, dat.sdate, dat.edate)} title=\"Click  \" /></DataTable.Cell>\n                                                </DataTable.Row>\n                                            ))}\n\n\n                                    </DataTable>\n\n                                    {\n                                        showDivision &&\n                                        <>\n                                            <View style={{ borderBottomColor: 'grey', borderBottomWidth: 1, marginBottom: 0, padding: 20, margin: 10 }} />\n                                            <Text style={{\n                                                fontSize: 23, fontWeight: '800', paddingLeft: 85, backgroundColor: \"#D9EDF7\", width: \"100%\",\n                                                height: 50, borderRadius: 10, textAlign: \"left\", paddingTop: 10\n                                            }}>Division</Text>\n\n                                            <DataTable>\n                                                <DataTable.Header>\n                                                    <DataTable.Title>Divison</DataTable.Title>\n                                                    <DataTable.Title >Code</DataTable.Title>\n                                                    <DataTable.Title >Link</DataTable.Title>\n                                                </DataTable.Header>\n\n\n                                                {\n                                                    responseData.div_mast.map(dat => (\n                                                        <DataTable.Row>\n                                                            <DataTable.Cell>{dat.div_mast}</DataTable.Cell>\n                                                            <DataTable.Cell >{dat.div_code}</DataTable.Cell>\n                                                            <DataTable.Cell ><Button title=\"Enter  \" onPress={() => homeHandler(dat._id, dat.div_code)} /></DataTable.Cell>\n                                                        </DataTable.Row>\n\n                                                    ))}\n\n                                            </DataTable>\n                                        </>\n                                    }\n\n                                </ScrollView>) : <></>\n\n                        }\n                    </> : <ActivityIndicator  color=\"skyblue\" size={100} />\n            }\n        </>\n    )\n}\n\nexport default Login\n\n\nconst styles = StyleSheet.create({\n    image: {\n        width: '40%',\n        height: \"30%\",\n     \n\n\n    },\n    form: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: 25,\n        backgroundColor:\"#F39C12\",\n        borderRadius:20\n    },\n    container: {\n        flex: 1,\n        flexDirection: \"column\",\n    },\n    button: {\n        backgroundColor: \"lightgray\",\n        borderRadius: 10,\n        width:wp(\"50%\")\n    }\n})"]},"metadata":{},"sourceType":"module"}