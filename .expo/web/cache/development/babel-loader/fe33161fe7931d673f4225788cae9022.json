{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Component, useState, useEffect } from 'react';\nimport Icon from \"@expo/vector-icons/Feather\";\nimport SearchableDropdown from 'react-native-searchable-dropdown';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction SelectTwo(_ref) {\n  var items = _ref.items,\n      selectedItem = _ref.selectedItem,\n      handleId = _ref.handleId,\n      placeholder = _ref.placeholder,\n      width = _ref.width,\n      name = _ref.name,\n      i = _ref.i,\n      handleProduct = _ref.handleProduct,\n      defaultValue = _ref.defaultValue,\n      product = _ref.product,\n      borderColor = _ref.borderColor;\n\n  var _useState = useState(selectedItem),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedItems = _useState2[0],\n      setSelectedItems = _useState2[1];\n\n  return _jsx(SearchableDropdown, {\n    name: name,\n    multi: false,\n    selectedItems: selectedItems[selectedItems.length - 1],\n    onItemSelect: function onItemSelect(item) {\n      var items = selectedItems;\n      items.push(item);\n      product ? handleId(item.id, product, i) : handleId(item);\n      product ? handleProduct(item.id, i, name, product) : console.log(\"\");\n      setSelectedItems(items);\n    },\n    containerStyle: {\n      padding: 5,\n      flex: 0.98,\n      width: width\n    },\n    itemStyle: {\n      padding: 10,\n      marginTop: 2,\n      backgroundColor: '#ddd',\n      borderColor: '#bbb',\n      borderWidth: 1,\n      borderRadius: 5\n    },\n    itemTextStyle: {\n      color: '#222'\n    },\n    itemsContainerStyle: {\n      maxHeight: 150\n    },\n    items: items,\n    chip: true,\n    resetValue: false,\n    textInputProps: {\n      placeholder: placeholder,\n      underlineColorAndroid: \"transparent\",\n      style: {\n        padding: 5,\n        borderWidth: 1,\n        borderColor: borderColor,\n        borderRadius: 5\n      },\n      defaultValue: defaultValue\n    },\n    listProps: {\n      nestedScrollEnabled: true\n    }\n  });\n}\n\nexport default SelectTwo;","map":{"version":3,"sources":["D:/Web/mobileapp/Blowhot/screens/components/SelectTwo.js"],"names":["React","Component","useState","useEffect","Icon","SearchableDropdown","SelectTwo","items","selectedItem","handleId","placeholder","width","name","i","handleProduct","defaultValue","product","borderColor","selectedItems","setSelectedItems","length","item","push","id","console","log","padding","flex","marginTop","backgroundColor","borderWidth","borderRadius","color","maxHeight","underlineColorAndroid","style","nestedScrollEnabled"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,IAAP;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;;;AACA,SAASC,SAAT,OACgE;AAAA,MAD5CC,KAC4C,QAD5CA,KAC4C;AAAA,MADtCC,YACsC,QADtCA,YACsC;AAAA,MADzBC,QACyB,QADzBA,QACyB;AAAA,MADhBC,WACgB,QADhBA,WACgB;AAAA,MAA9DC,KAA8D,QAA9DA,KAA8D;AAAA,MAAxDC,IAAwD,QAAxDA,IAAwD;AAAA,MAAnDC,CAAmD,QAAnDA,CAAmD;AAAA,MAAjDC,aAAiD,QAAjDA,aAAiD;AAAA,MAAnCC,YAAmC,QAAnCA,YAAmC;AAAA,MAAtBC,OAAsB,QAAtBA,OAAsB;AAAA,MAAdC,WAAc,QAAdA,WAAc;;AAGhE,kBAAsCf,QAAQ,CAACM,YAAD,CAA9C;AAAA;AAAA,MAAMU,aAAN;AAAA,MAAoBC,gBAApB;;AAEI,SACE,KAAC,kBAAD;AACA,IAAA,IAAI,EAAEP,IADN;AAEA,IAAA,KAAK,EAAE,KAFP;AAGA,IAAA,aAAa,EAAEM,aAAa,CAACA,aAAa,CAACE,MAAd,GAAqB,CAAtB,CAH5B;AAIA,IAAA,YAAY,EAAE,sBAACC,IAAD,EAAU;AACtB,UAAMd,KAAK,GAAGW,aAAd;AACAX,MAAAA,KAAK,CAACe,IAAN,CAAWD,IAAX;AACAL,MAAAA,OAAO,GAACP,QAAQ,CAACY,IAAI,CAACE,EAAN,EAASP,OAAT,EAAiBH,CAAjB,CAAT,GAA6BJ,QAAQ,CAACY,IAAD,CAA5C;AACAL,MAAAA,OAAO,GAACF,aAAa,CAACO,IAAI,CAACE,EAAN,EAASV,CAAT,EAAWD,IAAX,EAAgBI,OAAhB,CAAd,GAAuCQ,OAAO,CAACC,GAAR,CAAY,EAAZ,CAA9C;AACAN,MAAAA,gBAAgB,CAACZ,KAAD,CAAhB;AACD,KAVD;AAWA,IAAA,cAAc,EAAE;AAAEmB,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,IAAI,EAAC,IAAnB;AAAwBhB,MAAAA,KAAK,EAACA;AAA9B,KAXhB;AAaA,IAAA,SAAS,EAAE;AACTe,MAAAA,OAAO,EAAE,EADA;AAETE,MAAAA,SAAS,EAAE,CAFF;AAGTC,MAAAA,eAAe,EAAE,MAHR;AAITZ,MAAAA,WAAW,EAAE,MAJJ;AAKTa,MAAAA,WAAW,EAAE,CALJ;AAMTC,MAAAA,YAAY,EAAE;AANL,KAbX;AAsBA,IAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAtBf;AAuBA,IAAA,mBAAmB,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAvBrB;AAwBA,IAAA,KAAK,EAAE1B,KAxBP;AA0BA,IAAA,IAAI,EAAE,IA1BN;AA2BA,IAAA,UAAU,EAAE,KA3BZ;AA4BA,IAAA,cAAc,EACZ;AACEG,MAAAA,WAAW,EAAEA,WADf;AAEEwB,MAAAA,qBAAqB,EAAE,aAFzB;AAGEC,MAAAA,KAAK,EAAE;AAEHT,QAAAA,OAAO,EAAE,CAFN;AAGHI,QAAAA,WAAW,EAAE,CAHV;AAIHb,QAAAA,WAAW,EAAEA,WAJV;AAKHc,QAAAA,YAAY,EAAE;AALX,OAHT;AAYEhB,MAAAA,YAAY,EAACA;AAZf,KA7BF;AA6CA,IAAA,SAAS,EACP;AACEqB,MAAAA,mBAAmB,EAAE;AADvB;AA9CF,IADF;AAqDH;;AAED,eAAe9B,SAAf","sourcesContent":["import React, { Component, useState,useEffect } from 'react'\nimport Icon from 'react-native-vector-icons/Feather';\nimport SearchableDropdown from 'react-native-searchable-dropdown';\nfunction SelectTwo({items,selectedItem,handleId,placeholder,\n  width,name,i,handleProduct,defaultValue,product,borderColor}) {\n\n    \nconst[selectedItems,setSelectedItems]=useState(selectedItem)\n\n    return (\n      <SearchableDropdown\n      name={name}\n      multi={false}\n      selectedItems={selectedItems[selectedItems.length-1]}\n      onItemSelect={(item) => {\n        const items = selectedItems;\n        items.push(item)\n        product?handleId(item.id,product,i):handleId(item)\n        product?handleProduct(item.id,i,name,product):console.log(\"\")\n        setSelectedItems(items);\n      }}\n      containerStyle={{ padding: 5 ,flex:0.98,width:width}}\n    \n      itemStyle={{\n        padding: 10,\n        marginTop: 2,\n        backgroundColor: '#ddd',\n        borderColor: '#bbb',\n        borderWidth: 1,\n        borderRadius: 5,\n        \n      }}\n      itemTextStyle={{ color: '#222' }}\n      itemsContainerStyle={{ maxHeight: 150,}}\n      items={items}\n  \n      chip={true}\n      resetValue={false}\n      textInputProps={\n        {\n          placeholder: placeholder,\n          underlineColorAndroid: \"transparent\",\n          style: {\n              \n              padding: 5,\n              borderWidth: 1,\n              borderColor: borderColor,\n              borderRadius: 5,\n            \n              \n          },\n          defaultValue:defaultValue\n      \n        }\n      }\n      listProps={\n        {\n          nestedScrollEnabled: true,\n        }\n      }\n    />\n         )\n}\n\nexport default SelectTwo\n"]},"metadata":{},"sourceType":"module"}