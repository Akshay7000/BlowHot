{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { DataTable } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction Company(props) {\n  var _data$div_com;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showDivision = _useState2[0],\n      setShowDivision = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var divisionhandler = function divisionhandler(companycode) {\n    var company = function company() {\n      return _regeneratorRuntime.async(function company$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              AsyncStorage.setItem(\"companyCode\", companycode);\n              setShowDivision(true);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    company();\n  };\n\n  useEffect(function () {\n    var getData = function getData() {\n      var dat;\n      return _regeneratorRuntime.async(function getData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('data').then(function (req) {\n                return JSON.parse(req);\n              }).then(function (json) {\n                return console;\n              }, log(json), setData(json)).catch(function (error) {\n                return console.log('error!');\n              }));\n\n            case 2:\n              dat = _context2.sent;\n              setData(dat);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getData();\n  }, []);\n\n  var homeHandler = function homeHandler(divisionCode) {\n    var division = function division() {\n      return _regeneratorRuntime.async(function division$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              AsyncStorage.setItem(\"divisionCode\", divisionCode);\n              props.navigation.navigate('Home');\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    division();\n  };\n\n  return _jsxs(ScrollView, {\n    children: [_jsxs(DataTable, {\n      children: [_jsxs(DataTable.Header, {\n        children: [_jsx(DataTable.Title, {\n          children: \"Company\"\n        }), _jsx(DataTable.Title, {\n          children: \"Start Dtae\"\n        }), _jsx(DataTable.Title, {\n          children: \"End Date\"\n        }), _jsx(DataTable.Title, {\n          children: \"Enter\"\n        })]\n      }), (_data$div_com = data.div_com) == null ? void 0 : _data$div_com.map(function (dat) {\n        return _jsxs(DataTable.Row, {\n          children: [_jsx(DataTable.Cell, {\n            children: dat.com_name\n          }), _jsx(DataTable.Cell, {\n            children: dat.sdate.substring(0, 10)\n          }), _jsx(DataTable.Cell, {\n            children: dat.edate.substring(0, 10)\n          }), _jsx(DataTable.Cell, {\n            children: _jsx(Button, {\n              onPress: function onPress() {\n                return divisionhandler(dat._id);\n              },\n              title: \"Click\"\n            })\n          })]\n        });\n      })]\n    }), showDivision && _jsxs(_Fragment, {\n      children: [_jsx(View, {\n        style: {\n          borderBottomColor: 'grey',\n          borderBottomWidth: 1,\n          marginBottom: 20,\n          padding: 20,\n          margin: 10\n        }\n      }), _jsx(Text, {\n        style: {\n          fontSize: 23,\n          fontWeight: '800',\n          paddingLeft: 85\n        },\n        children: \"Division\"\n      }), _jsxs(DataTable, {\n        children: [_jsxs(DataTable.Header, {\n          children: [_jsx(DataTable.Title, {\n            children: \"Divison\"\n          }), _jsx(DataTable.Title, {\n            children: \"Code\"\n          }), _jsx(DataTable.Title, {\n            children: \"Link\"\n          })]\n        }), data.div_mast.map(function (dat) {\n          return _jsxs(DataTable.Row, {\n            children: [_jsx(DataTable.Cell, {\n              children: dat.div_mast\n            }), _jsx(DataTable.Cell, {\n              children: dat.div_code\n            }), _jsx(DataTable.Cell, {\n              children: _jsx(Button, {\n                title: \"Enter\",\n                onPress: function onPress() {\n                  return homeHandler(dat._id);\n                }\n              })\n            })]\n          });\n        })]\n      })]\n    })]\n  });\n}\n\nexport default Company;","map":{"version":3,"sources":["D:/Web/mobileapp/Blowhot/screens/screen/Company.js"],"names":["React","useState","useEffect","DataTable","ScrollView","AsyncStorage","Company","props","showDivision","setShowDivision","data","setData","divisionhandler","companycode","company","setItem","getData","getItem","then","req","JSON","parse","json","console","log","catch","error","dat","homeHandler","divisionCode","division","navigation","navigate","div_com","map","com_name","sdate","substring","edate","_id","borderBottomColor","borderBottomWidth","marginBottom","padding","margin","fontSize","fontWeight","paddingLeft","div_mast","div_code"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { StyleSheet, Text, View,Button} from 'react-native';\nimport { DataTable} from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\n\n\nfunction Company(props) {\n\n    const[showDivision,setShowDivision]=useState(false)\n    const[data,setData]=useState()\n    const divisionhandler = (companycode) => { \n    const company=async()=>{\n    AsyncStorage.setItem(\"companyCode\",  companycode)\n    setShowDivision(true)\n        }\n        company();\n\n    }\n    \n  \n    useEffect(()=>{\nconst getData=async()=>{\nlet dat=await AsyncStorage.getItem('data')\n.then(req => JSON.parse(req))\n.then(json => \n    console,log(json),\n    setData(json))\n.catch(error => console.log('error!'));\n\nsetData(dat)\n}\ngetData();\n\n    },[])\n\n    const homeHandler = (divisionCode) => {\n\n        const division=async()=>{\n        AsyncStorage.setItem(\"divisionCode\",divisionCode)\n        props.navigation.navigate('Home')\n        }\n        division();\n    }\n    return (\n        <ScrollView>\n           \n        <DataTable>\n            <DataTable.Header>\n                <DataTable.Title>Company</DataTable.Title>\n                <DataTable.Title >Start Dtae</DataTable.Title>\n                <DataTable.Title >End Date</DataTable.Title>\n                <DataTable.Title >Enter</DataTable.Title>\n            </DataTable.Header>\n\n\n      {\n      data.div_com?.map(dat=>(\n                <DataTable.Row>\n                <DataTable.Cell>{dat.com_name}</DataTable.Cell>\n                <DataTable.Cell >{(dat.sdate).substring(0,10)}</DataTable.Cell>\n                <DataTable.Cell >{(dat.edate).substring(0,10)}</DataTable.Cell>\n                <DataTable.Cell ><Button onPress={()=>divisionhandler(dat._id)} title=\"Click\"/></DataTable.Cell>\n                </DataTable.Row>\n         ))}\n           \n\n            </DataTable>\n        \n\n{\n    showDivision &&\n<>\n            <View style={{ borderBottomColor: 'grey',borderBottomWidth: 1,marginBottom:20,padding:20,margin:10}}/>\n          <Text style={{fontSize:23,fontWeight:'800',paddingLeft:85}}>Division</Text>\n   \n            <DataTable>\n                <DataTable.Header>\n                    <DataTable.Title>Divison</DataTable.Title>\n                    <DataTable.Title >Code</DataTable.Title>\n                    <DataTable.Title >Link</DataTable.Title>\n                </DataTable.Header>\n\n\n                {\n      data.div_mast.map(dat=>(\n                <DataTable.Row>\n                    <DataTable.Cell>{dat.div_mast}</DataTable.Cell>\n                    <DataTable.Cell >{dat.div_code}</DataTable.Cell>\n                    <DataTable.Cell ><Button title=\"Enter\" onPress={()=>homeHandler(dat._id)} /></DataTable.Cell>\n                </DataTable.Row>\n\n                ))}\n\n            </DataTable>\n            </>\n}\n        </ScrollView>\n    )\n}\n\n\nexport default Company\n\n\n"]},"metadata":{},"sourceType":"module"}